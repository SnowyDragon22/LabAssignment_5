#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct node {
    char letter;
    struct node* next;
} node;

// Returns number of nodes in the linkedList.
int length(node* head)
{
    node * temp = head;
    int NUM = 0;
    if(head == NULL) return 0;
    else{
        while(temp != NULL){
            temp = temp->next;
            NUM++;
        }
        return NUM;
    }
}

// parses the string in the linkedList
//  if the linked list is head -> |a|->|b|->|c|
//  then toCString function wil return "abc"
char* toCString(node* head){
    
    
    int len = length(head);
    char * pWord = malloc((len + 1) * sizeof(char));    

    node * t = head;
    int count = 0;

    if(head == NULL) return "-1";
    else{
        t = head;
        while(t != NULL){
            pWord[count] = t->letter;
            t = t->next;
            count++;
        }
    }
    return pWord;
    
}


// inserts character to the linkedlist
// f the linked list is head -> |a|->|b|->|c|
// then insertChar(&head, 'x') will update the linked list as foolows:
// head -> |a|->|b|->|c|->|x|
void insertChar(node** pHead, char c)
{
    node *t;
    node *temp = malloc(sizeof(node));
    
    temp->letter = c;
    temp->next = NULL;
    
    if(*pHead == NULL){
        *pHead = temp;
    }
    else{
        t = *pHead;
        while(t->next != NULL){
            t = t->next;
        }
        
        t->next = temp;
    }
}

// deletes all nodes in the linkedList.

void deleteList(node** pHead)
{
    node * t = *pHead;
    while(t->next != NULL){
        node* next = t->next;
        free(t);
        t = next;
    }
    *pHead = NULL;

}

int main(void)
{
    int i, strLen, numInputs;
    node* head = NULL;
    char* str;
    char c;
    FILE* inFile = fopen("input.txt","r");

    fscanf(inFile, " %d\n", &numInputs);
    
    while (numInputs-- > 0)
    {
        fscanf(inFile, " %d\n", &strLen);
        for (i = 0; i < strLen; i++)
        {
            fscanf(inFile," %c", &c);
            insertChar(&head, c);
        }

        str = toCString(head);
        printf("String is : %s\n", str);
        printf("\n");
        free(str);
        deleteList(&head);

        if (head != NULL)
        {
            printf("deleteList is not correct!");
            break;
        }
    }

    fclose(inFile);
}
